steps:
- id: 'Branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'Git ssh-keygen setup'
  name: 'alpine'
  entrypoint: 'sh'
  dir: /workspace
  args: 
  - '-c'
  - | 
      apk update && \
      apk add --no-cache \
      openssh-keygen

      mkdir /workspace/.ssh
      echo -n $$GITOPS_DEPLOY_REPO_SSH_KEY >> /workspace/.ssh/id_ed25519_cloudbuild
      cat << EOF > /workspace/.ssh/config
      Host *
        AddKeysToAgent yes
        UseKeychain yes
        IdentityFile /workspace/.ssh/id_ed25519_cloudbuild
      EOF
  secretEnv: ['GITOPS_DEPLOY_REPO_SSH_KEY']

- id: 'Git clone deploy repo'
  name: 'alpine/git'
  entrypoint: 'sh'
  dir: /workspace
  args: 
  - '-c'
  - | 
      ls -la /workspace
      cat /workspace/.ssh/config
      git clone https://github.com/mbychkowski/gcp-config-controller-deploy.git
      ls gcp-config-controller-deploy
  waitFor: ["Git ssh-keygen setup"] 

# - id: "GitOps blueprint"
#   name: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
#   dir: /workspace
#   entrypoint: /bin/bash
#   args:
#     - '-c'
#     - |

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/GITOPS_DEPLOY_REPO_SSH_KEY/versions/latest
      env: GITOPS_DEPLOY_REPO_SSH_KEY      
